list_header = ['1.1.	Цели и задачи освоения учебной дисциплины',
               '1.2.	Место учебной дисциплины в структуре образовательной программы',
               '1.3.	Перечень планируемых результатов обучения, соотнесенных с планируемыми результатами освоения образовательной программы',
               '2.1. Объем дисциплины в зачетных единицах с указанием количества академических часов,  выделенных на контактную работу обучающихся с преподавателем  (по видам занятий) и на самостоятельную работу обучающихся',
               '2.2. Содержание дисциплины (модуля), структурированное по темам (разделам) с указанием отведенного на них количества академических часов и видов учебных занятий',
               '2.2.1 Лекции',
               '2.2.2 Практические занятия/Семинары',
               '3. Перечень учебно-методического обеспечения для самостоятельной работы обучающихся по дисциплине ',
               '4.Фонд оценочных средств для проведения промежуточной аттестации',
               '4.1.Перечень компетенций с указанием этапов их формирования',
               '4.2.  Описание показателей и критериев оценивания компетенций',
               '4.2.1. Собеседование',
               '4.2.2. Тестирование',
               '4.2.3 Оценивание семестрового задания',
               '4.3. Типовые контрольные задания или иные материалы',
               '4.3.1. Практические задания',
               '4.3.2. Проверочная работа',
               '4.3.5. Вопросы для подготовки к зачету',
               '4.3.6. Вопросы для подготовки к экзамену',
               '5.Перечень основной и дополнительной учебной литературы, необходимой для освоения дисциплины (модуля)',
               '6.Перечень ресурсов информационно-телекоммуникационной сети «Интернет», необходимых для освоения дисциплины (модуля)',
               '7. Методические указания для обучающихся по освоению дисциплины (модуля)',
               '8.Перечень информационных технологий, используемых при осуществлении образовательного процесса по дисциплине (модулю)',
               '9.Описание материально-технической базы, необходимой для осуществления образовательного процесса по дисциплине (модулю)',
               '1.1. Аннотация содержания дисциплины',
               '1.2. Язык реализации программы – русский язык.',
               '1.3. Планируемые результаты обучения по дисциплине',
               '1.4. Объем дисциплины по очной форме обучения',
               '2.	СОДЕРЖАНИЕ ДИСЦИПЛИНЫ',
               '3.1.	Распределение аудиторной нагрузки и мероприятий самостоятельной работы по разделам дисциплины',
               '4.2.	Практические занятия',
               '4.3.	Примерная тематика самостоятельной работы',
               '4.3.1.	Примерный перечень тем домашних работ',
               '4.3.2.	Примерный перечень тем графических работ',
               '4.3.3.	Примерный перечень тем рефератов (эссе, творческих работ)',
               '4.3.4.	    Примерная тематика индивидуальных или групповых проектов',
               '4.3.5.	Примерный перечень тем расчетных работ (программных продуктов)',
               '4.3.6.	Примерный перечень тем расчетно-графических работ',
               '4.3.7.	Примерный перечень тем курсовых проектов (курсовых работ)  ',
               '4.3.8.	Примерная тематика контрольных работ',
               '4.3.9.	  Примерная тематика коллоквиумов',
               '5.	СООТНОШЕНИЕ РАЗДЕЛОВ, ТЕМ ДИСЦИПЛИНЫ И ПРИМЕНЯЕМЫХ ТЕХНОЛОГИЙ ОБУЧЕНИЯ',
               '6.	ПРОЦЕДУРЫ КОНТРОЛЯ И ОЦЕНИВАНИЯ РЕЗУЛЬТАТОВ ОБУЧЕНИЯ ',
               '7.	ПРОЦЕДУРЫ ОЦЕНИВАНИЯ РЕЗУЛЬТАТОВ ОБУЧЕНИЯ В РАМКАХ НЕЗАВИСИМОГО ТЕСТОВОГО КОНТРОЛЯ (Приложение 2)',
               '8.	ФОНД ОЦЕНОЧНЫХ СРЕДСТВ ДЛЯ ПРОВЕДЕНИЯ ТЕКУЩЕЙ И ПРОМЕЖУТОЧНОЙ АТТЕСТАЦИИ ПО ДИСЦИПЛИНЕ (Приложение 3)',
               '9.	УЧЕБНО-МЕТОДИЧЕСКОЕ И ИНФОРМАЦИОННОЕ ОБЕСПЕЧЕНИЕ ДИСЦИПЛИНЫ',
               '9.1. Рекомендуемая литература',
               '9.1.1.Основная литература',
               '9.1.2.Дополнительная литература',
               '9.2. Методические разработки ',
               '9.3. Программное обеспечение',
               '9.4. Базы данных, информационно-справочные и поисковые системы',
               '9.5.Электронные образовательные ресурсы',
               '10. МАТЕРИАЛЬНО-ТЕХНИЧЕСКОЕ ОБЕСПЕЧЕНИЕ ДИСЦИПЛИНЫ',
               '6. ПРОЦЕДУРЫ КОНТРОЛЯ И ОЦЕНИВАНИЯ РЕЗУЛЬТАТОВ ОБУЧЕНИЯ В РАМКАХ ТЕКУЩЕЙ И ПРОМЕЖУТОЧНОЙ АТТЕСТАЦИИ ПО ДИСЦИПЛИНЕ',
               '6.2.Процедуры текущей и промежуточной аттестации по дисциплине ',
               '6.3. Процедуры текущей и промежуточной аттестации курсового проекта ',
               '6.4. Коэффициент значимости семестровых результатов освоения дисциплины',
               '7. ПРОЦЕДУРЫ ОЦЕНИВАНИЯ РЕЗУЛЬТАТОВ ОБУЧЕНИЯ В РАМКАХ НЕЗАВИСИМОГО ТЕСТОВОГО КОНТРОЛЯ',
               '8. ФОНД ОЦЕНОЧНЫХ СРЕДСТВ ДЛЯ ПРОВЕДЕНИЯ ТЕКУЩЕЙ И ПРОМЕЖУТОЧНОЙ АТТЕСТАЦИИ ПО ДИСЦИПЛИНЕ ',
               '8.1. КРИТЕРИИ ОЦЕНИВАНИЯ РЕЗУЛЬТАТОВ КОНТРОЛЬНО-ОЦЕНОЧНЫХ МЕРОПРИЯТИЙ ТЕКУЩЕЙ И ПРОМЕЖУТОЧНОЙ АТТЕСТАЦИИ ПО ДИСЦИПЛИНЕ В РАМКАХ БРС',
               '8.2. КРИТЕРИИ ОЦЕНИВАНИЯ РЕЗУЛЬТАТОВ ПРОМЕЖУТОЧНОЙ АТТЕСТАЦИИ ПРИ ИСПОЛЬЗОВАНИИ НЕЗАВИСИМОГО ТЕСТОВОГО КОНТРОЛЯ',
               '8.3. ОЦЕНОЧНЫЕ СРЕДСТВА ДЛЯ ПРОВЕДЕНИЯ ТЕКУЩЕЙ И ПРОМЕЖУТОЧНОЙ АТТЕСТАЦИИ ',
               '8.3.1. Примерные задания для проведения мини-контрольных в рамках учебных занятий ',
               '8.3.2. Примерные контрольные задачи в рамках учебных занятий ',
               '8.3.3. Примерные контрольные кейсы ',
               '8.3.4. Перечень примерных вопросов для зачета ',
               '8.3.5. Перечень примерных вопросов для экзамена ',
               '8.3.6.Ресурсы АПИМ УрФУ, СКУД УрФУ для проведения тестового контроля в рамках текущей и промежуточной аттестации',
               '8.3.7. Ресурсы ФЭПО для проведения независимого тестового ',
               '8.3.8. Интернет-тренажеры ',
               '1.	Цели освоения дисциплины',
               '2.	Место дисциплины в структуре ООП',
               '3.	Компетенции обучающегося, формируемые в результате освоения дисциплины (модуля).',
               '4.1. Структура дисциплины',
               '4.2 Содержание теоретического раздела дисциплины (модуля)',
               '4.3 Содержание практического раздела дисциплины (модуля)',
               'Практические или семинарские занятия',
               'Организованная самостоятельная работа',
               '4.	Образовательные технологии, используемые при различных видах учебной работы ',
               '5.	Учебно-методическое обеспечение самостоятельной работы студентов. Оценочные   средства для текущего контроля успеваемости, промежуточной аттестации по итогам освоения дисциплины.',
               '6.1. Перечень оценочных средств для текущего контроля освоения дисциплины',
               '6.2. Состав фонда оценочных средств для проведения промежуточной аттестации обучающихся по дисциплине',
               '6.	Учебно-методическое и информационное обеспечение дисциплины (модуля)',
               '7.1. Перечень основной и дополнительной учебной литературы',
               '7.2. Перечень ресурсов информационно-телекоммуникационной сети "Интернет»',
               '7.3. Перечень информационных технологий, используемых при осуществлении образовательного процесса по дисциплине  (при необходимости).',
               '7.	Материально-техническое обеспечение дисциплины (модуля).',
               '1. Цели и задачи дисциплины',
               'Краткое содержание дисциплины',
               '2. Компетенции обучающегося, формируемые в результате освоения дисциплины',
               '3. Место дисциплины в структуре ОП ВО',
               '4. Объём и виды учебной работы',
               '5. Содержание дисциплины',
               '5.1. Лекции',
               '5.2. Практические занятия, семинары',
               '5.3. Лабораторные работы',
               '5.4. Самостоятельная работа студента',
               '6. Инновационные образовательные технологии, используемые в учебном процессе',
               '7. Фонд оценочных средств (ФОС) для проведения текущего контроля успеваемости, промежуточной аттестации по итогам освоения дисциплины ',
               '7.1. Паспорт фонда оценочных средств ',
               '7.2. Виды контроля, процедуры проведения, критерии оценивания ',
               '7.3. Типовые контрольные задания ',
               '8. Учебно-методическое и информационное обеспечение дисциплины','\n1.4. Объем дисциплины по очно-заочной форме обучения',
               '1.4. Объем дисциплины по очной форме обучения','\n1.4. Объем дисциплины по очной форме обучения','1.4. Объем дисциплины по очно-заочной форме обучения',
               '\nСтруктура и содержание учебной дисциплины',
               '2.	Структура и содержание учебной дисциплины']

list_header_result = ['1.3. Планируемые результаты обучения по дисциплине ',
                      'Перечень планируемых результатов обучения, соотнесенных с планируемыми результатами освоения образовательной программы',
'\nПеречень планируемых результатов обучения, соотнесенных с планируемыми результатами освоения образовательной программы',
                      '1.3. Перечень планируемых результатов обучения, соотнесенных ']

from yargy import Parser, rule, and_, or_
from yargy.predicates import gram, is_capitalized, dictionary, is_upper, length_eq, is_title
from docx import Document
from docx.shared import Inches
import os, subprocess

baseDir = r'C:\Users\Катя\Desktop\рпд'


isResults = rule(
    and_(dictionary({
                'Знать',
                'Уметь',
                'Владеть'
            }), is_capitalized()
    )

)
result_rule = Parser(isResults)

IsCompetitionsAndResults = rule(dictionary(
    {
        'результат'
    }
))
table_rule = Parser(IsCompetitionsAndResults)
def GetDocuments():
    documents = []
    for filename in os.listdir(baseDir):
        if filename.endswith('.docx'):
            documents.append(filename)
    return documents

def GetIndexPart(list_header_result):
    index = 0
    for i in document.paragraphs:
        txt = i.text
        if i.text in list_header_result:
            return index
        index += 1

def GetPart(list_header_result):
    part = ""
    index = GetIndexPart(list_header_result) + 1
    while document.paragraphs[index].text not in list_header:
        part += document.paragraphs[index].text
        index += 1
    return part


def GetResults(part):
    dict_result = {}
    current = None
    for next in result_rule.findall(part):
        if current is not None:
            res = part[current.tokens[0].span[1]+1:next.tokens[0].span[0]]
            if current.tokens[0].value not in dict_result:
                dict_result[current.tokens[0].value] = []
            dict_result[current.tokens[0].value] = res.split(';')
        current = next
    if current is not None:
        if current.tokens[0].value not in dict_result:
            dict_result[current.tokens[0].value] = []
        dict_result[current.tokens[0].value] = part[current.tokens[0].span[1]+1:].split(';')
    else:
        dict_result = GetResultsFromTable()
    return dict_result

def GetResultsFromTable():
    dict_result = {}
    text = TextPrepare().split('@')
    for i in text:
        current = None
        for next in result_rule.findall(i):
            if current is not None:
                res = i[current.tokens[0].span[1]+1:next.tokens[0].span[0]]
                if current.tokens[0].value not in dict_result:
                    dict_result[current.tokens[0].value] = []
                dict_result[current.tokens[0].value].append(res)
            current = next
        if current is not None:
            if current.tokens[0].value not in dict_result:
                dict_result[current.tokens[0].value] = []
            dict_result[current.tokens[0].value].append(i[current.tokens[0].span[1]+1:])
    return dict_result

def FindTableResult():
    for i in document.tables:
        for cell in i.rows[0].cells:
            if table_rule.find(cell.text) is not None:
                return i

def TextPrepare():
    my_table = ""
    for row in FindTableResult().rows:
        for cell in row.cells:
            my_table += cell.text
            my_table += "~"
        my_table += "@"
    return my_table

documents = GetDocuments()
path = baseDir + '\\'+documents[6]
print(path)
document = Document(path)
part = GetPart(list_header_result)
print(part)
results = GetResults(part)
print('entity')
for i in results:
    print(i)
    print(results[i])
# for i in documents:
#     path = baseDir + '\\'+i
#     print(path)
#     document = Document(path)
#     part = GetPart(list_header_result)
#     print(part)
#     results = GetResults(part)
#     print('entity')
#     for i in results:
#         print(i)
#         print(results[i])
